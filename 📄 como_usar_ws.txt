=============================================
CONSUMINDO A API WEBSOCKET NO SEU FRONTEND
=============================================

1. Endpoints disponíveis:
-------------------------
- ws://<host>:8000/ws/opc?name=<NOME>
  → Stream de um sinal OPC específico (ex.: name=V1_12)

- ws://<host>:8000/ws/opc?all=true
  → Stream de TODOS os sinais OPC (cuidado: pode gerar muito tráfego)

- ws://<host>:8000/ws/mpu?id=<ID>
  → Stream de um sensor MPU (id=MPUA1 ou id=MPUA2)

- ws://<host>:8000/ws/dual?names=A,B,C&id=MPUA1
  → Stream de múltiplos OPC + 1 MPU numa mesma conexão

2. Mensagens recebidas:
-----------------------
Sempre em JSON. Existem dois tipos principais:

- HELLO (foto inicial do banco, logo ao conectar):
  {
    "type": "hello",
    "kind": "opc",    // ou "mpu"
    "name": "V1_12",  // para OPC
    "id": "MPUA1",    // para MPU
    "last": { ... }   // último valor do banco
  }

- EVENTOS ao vivo (via Redis):
  OPC:
  {
    "type": "opc_event",
    "ts_utc": "2025-09-03T03:31:06.207050Z",
    "name": "V1_12",
    "value_bool": 1
  }

  MPU:
  {
    "type": "mpu_sample",
    "ts_utc": "2025-09-03T03:31:06.207050Z",
    "id": "MPUA1",
    "ax_g": 0.012, "ay_g": -0.004, "az_g": 0.998,
    "gx_dps": null, "gy_dps": null, "gz_dps": null,
    "temp_c": null
  }

3. Exemplos práticos:
---------------------
JavaScript (puro):
------------------
const ws = new WebSocket("ws://localhost:8000/ws/opc?name=V1_12");
ws.onmessage = (e) => {
  const msg = JSON.parse(e.data);
  if (msg.type === "opc_event") {
    console.log("V1_12 agora é:", msg.value_bool ? "ON" : "OFF");
  }
};

React (useEffect):
------------------
useEffect(() => {
  const ws = new WebSocket("ws://localhost:8000/ws/mpu?id=MPUA1");
  ws.onmessage = (e) => {
    const msg = JSON.parse(e.data);
    if (msg.type === "mpu_sample") {
      setMpuData(msg); // exibir nos gráficos
    }
  };
  return () => ws.close();
}, []);

4. Dicas:
---------
- Use "hello" para inicializar o estado na tela, e "opc_event"/"mpu_sample" para atualizar em tempo real.
- Se o front for em outro domínio, configure ALLOWED_ORIGINS no .env da API.
- Se não houver eventos, confirme se o coletor está rodando e publicando no Redis.
- Para testes sem hardware, use DATA_MODE=SIMULATE no collector.
